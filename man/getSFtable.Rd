% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SF_sql_reading.R
\name{getSFtable}
\alias{getSFtable}
\alias{colsfromtbl}
\title{Extract table from connection to Sustainable Farms SQL database}
\usage{
getSFtable(
  tablename,
  schema,
  con,
  last = NULL,
  tryperm = FALSE,
  verbose = tryperm,
  n = -1,
  params = NULL,
  ...
)

colsfromtbl(cols, tablename, schema, con, n = -1, params = NULL, ...)
}
\arguments{
\item{tablename}{The name of table to extract columns from}

\item{schema}{The schema containing the table}

\item{con}{A connection to the SQL database. Created, for example, by \code{DBI::dbConnect}}

\item{last}{Column names to put last when querying the database}

\item{tryperm}{TRUE means try different permutations of the column ordering until table successfully extracted.}

\item{verbose}{If TRUE prints each permutation of column names before it is tried.}

\item{n}{Passed to dbGetQuery. Maximum number of records to retrieve per fetch. Use n = -1 or n = Inf to retrieve all pending records. Some implementations may recognize other special values.}

\item{params}{Query parameters to pass to dbBind() via dbGetQuery. See dbBind() for details.}

\item{cols}{A list of column names to extract}
}
\description{
Extraction using the column order given in the database does not always work. I suspect this is due to the issue https://github.com/r-dbi/odbc/issues/112.
}
\details{
Best guesses so far is that all columns of data type 'varchar' must be read last (credit to https://github.com/r-dbi/odbc/issues/86#issuecomment-314492486).
The bug report here https://github.com/r-dbi/odbc/issues/10 also suggests 'varbinary' types should be places last.
The names of columns of these types are appeneded to \code{last} in \code{getSFtable}.
}
\section{Functions}{
\itemize{
\item \code{colsfromtbl}: Extract specific columns from a table in the SQL database
}}

\examples{
out <- getSFtable("tblPost-fireAcaciaBasal", "VicBirdsVegetation", con, last = "VisitCode2")
}
